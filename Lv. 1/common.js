// 최대공약수와 최소공배수
// 문제 설명
// 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수,
//  solution을 완성해 보세요.
//  배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.
//  예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로
//  solution(3, 12)는 [3, 12]를 반환해야 합니다.

// 입출력 예
// n	m	return
// 3	12	[3, 12]
// 2	5	[1, 10]
function solution(n, m) {
  // 유클리드 알고리즘 (유클리드 호제법)
  // 1. 두 수 중에서 큰 수를 작은 수로 나눈다.
  // 2. 만약 나누고 난 나머지가 0이라면 작은 수가 최대공약수이다.
  // 3. 만약 나머지가 0이 아니라면, 작은 수를 다시 나머지로 나눈다.
  // 4. 이를 반복해서 나머지가 0이 될 때, 그 수가 바로 두수의 최대공약수이다.

  // 최대공약수 구하기
  function gcd(a, b) {
    return a % b === 0 ? b : gcd(b, a % b);
  }

  // 최대공배수 구하기
  let lcm = (n * m) / gcd(n, m);

  return [gcd(n, m), lcm];
}

console.log(solution(3, 12));
console.log(solution(2, 5));
